extend type Query{
getSellers(filter: SellerFilter, page: PageInput!, sortBy: SellerSortBy): SellerPageableResponse!
}

input SellerFilter {
searchByName: String
producerIds: [String]
marketplaceIds: [String]
}

enum SellerSortBy {
SELLER_INFO_EXTERNAL_ID_ASC,
SELLER_INFO_EXTERNAL_ID_DESC,
NAME_ASC,
NAME_DESC,
MARKETPLACE_ID_ASC,
MARKETPLACE_ID_DESC,
}

type SellerPageableResponse {
meta: PageMeta!
data: [Seller!]
}
type PageMeta {
    totalPages: Int
    totalItems: Int
}

type Seller {
sellerName: String
externalId: String!
producerSellerStates: [ProducerSellerState]!
marketplaceId: String
}

type ProducerSellerState {
producerId: ID!
producerName: String!
sellerState: SellerState!
sellerId: ID!
}

enum SellerState {
REGULAR
WHITELISTED
GREYLISTED
BLACKLISTED
}